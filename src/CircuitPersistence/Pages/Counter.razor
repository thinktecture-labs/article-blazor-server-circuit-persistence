@using CircuitPersistence.Services
@page "/counter"

@inject SessionPersistenceCircuitHandler circuitHandler
@inject IComponentStore componentStore
@inject IScopeStore scopeStore
@inject ISingletonStore singletonStore
@inject ISessionStore sessionStore

<h1>Counter</h1>

<br/>
<h2>Component</h2>
<p>Current count: @componentCount</p>
<button class="btn btn-primary" @onclick="IncrementComponentCount">Increment Component</button>
<hr/>
<br/>
<h2>Circuit</h2>
<p>Current count: @scopeCount</p>
<button class="btn btn-primary" @onclick="IncrementCircuitCountAsync">Increment Circuit</button>
<hr/>
<br/>
<h2>Global</h2>
<p>Current count: @singletonCount</p>
<button class="btn btn-primary" @onclick="IncrementGlobalCountAsync">Increment Global</button>
<hr/>
<br/>
<h2>Session</h2>
<p>Current count: @sessionCount</p>
<button class="btn btn-primary" @onclick="IncrementSessionCountAsync">Increment Session</button>

@code {
    const string VALUE = "count";

    protected override async Task OnInitializedAsync()
    {
        componentCount = Int32.Parse((await componentStore.LoadValueAsync(VALUE) ?? "0"));
        scopeCount = Int32.Parse((await scopeStore.LoadValueAsync(VALUE)) ?? "0");
        singletonCount = Int32.Parse((await singletonStore.LoadValueAsync(VALUE)) ?? "0");
        sessionCount = Int32.Parse((await sessionStore.LoadValueAsync($"{circuitHandler.SessionId}_{VALUE}")) ?? "0");
    }

    private int componentCount = 0;
    private async Task IncrementComponentCount()
    {
        componentCount++;
        await componentStore.SaveValueAsync(VALUE, componentCount.ToString());
    }

    private int scopeCount = 0;
    private async Task IncrementCircuitCountAsync()
    {
        scopeCount++;
        await scopeStore.SaveValueAsync(VALUE, scopeCount.ToString());
    }

    private int singletonCount = 0;
    private async Task IncrementGlobalCountAsync()
    {
        singletonCount++;
        await singletonStore.SaveValueAsync(VALUE, singletonCount.ToString());
    }

    private int sessionCount = 0;
    private async Task IncrementSessionCountAsync()
    {
        sessionCount++;
        await sessionStore.SaveValueAsync($"{circuitHandler.SessionId}_{VALUE}", sessionCount.ToString());
    }
}
